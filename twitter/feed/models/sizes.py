# coding: utf-8

from __future__ import absolute_import
from feed.models.size import Size
#from django.db.models import Model
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Sizes(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, thumb: Size=None, large: Size=None, medium: Size=None, small: Size=None):
        """
        Sizes - a model defined in Swagger

        :param thumb: The thumb of this Sizes.
        :type thumb: Size
        :param large: The large of this Sizes.
        :type large: Size
        :param medium: The medium of this Sizes.
        :type medium: Size
        :param small: The small of this Sizes.
        :type small: Size
        """
        self.swagger_types = {
            'thumb': Size,
            'large': Size,
            'medium': Size,
            'small': Size
        }

        self.attribute_map = {
            'thumb': 'thumb',
            'large': 'large',
            'medium': 'medium',
            'small': 'small'
        }

        self._thumb = thumb
        self._large = large
        self._medium = medium
        self._small = small

    @classmethod
    def from_dict(cls, dikt) -> 'Sizes':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Sizes of this Sizes.
        :rtype: Sizes
        """
        return deserialize_model(dikt, cls)

    @property
    def thumb(self) -> Size:
        """
        Gets the thumb of this Sizes.

        :return: The thumb of this Sizes.
        :rtype: Size
        """
        return self._thumb

    @thumb.setter
    def thumb(self, thumb: Size):
        """
        Sets the thumb of this Sizes.

        :param thumb: The thumb of this Sizes.
        :type thumb: Size
        """

        self._thumb = thumb

    @property
    def large(self) -> Size:
        """
        Gets the large of this Sizes.

        :return: The large of this Sizes.
        :rtype: Size
        """
        return self._large

    @large.setter
    def large(self, large: Size):
        """
        Sets the large of this Sizes.

        :param large: The large of this Sizes.
        :type large: Size
        """

        self._large = large

    @property
    def medium(self) -> Size:
        """
        Gets the medium of this Sizes.

        :return: The medium of this Sizes.
        :rtype: Size
        """
        return self._medium

    @medium.setter
    def medium(self, medium: Size):
        """
        Sets the medium of this Sizes.

        :param medium: The medium of this Sizes.
        :type medium: Size
        """

        self._medium = medium

    @property
    def small(self) -> Size:
        """
        Gets the small of this Sizes.

        :return: The small of this Sizes.
        :rtype: Size
        """
        return self._small

    @small.setter
    def small(self, small: Size):
        """
        Sets the small of this Sizes.

        :param small: The small of this Sizes.
        :type small: Size
        """

        self._small = small

